ALGORITHM FOR ASSIGNMENT 4

David Haines

Goal:  Create a menu driven program that can load student information from a text file, store it in the stack,
print the stack with each subject on a different line, then exit. Each step will be user controlled.

The program will consist of four classes:
	1) Driver class: basically a main class to load in the text file and run the stack operations
	2) Stack class: a written ADT stack class to accept all data types. 
	3) Subject class: a class containing first and last name, address, student ID, and GPA
	4) Address class: a class containing address line 1 and 2, city, state, and zip code
		-Subject and address share an aggregation relationship in which a student has an address
		
The driver class will present a menu that runs in a while loop until 3 is pressed. 
	-if 1, load the subjects
	-if 2, print the stack 
	-if 3 exit program by exiting loop
	
	- it will also create a new instance of the stack, in which 10 subjects are allowed at once
	
	Loading subjects:		
		-the program will load in the "students.txt" with file input stream, input stream reader, and buffered reader
		-the buffered reader will read off the first line and set it to string headerline
			-this will ignore the header when setting data to new instances
		
		-the buf reader will then do a while loop iterating through the rest of the lines in the txt file until there is a null line
			-line = br.readLine !=null (while the line is not null, run)
			
				-for each line, create a string array and call it item or field (or whatever you want)
					-set that = to line.split and split the line by comma
					-this will put each separate field into an array (first name, last name, etc)
					
				-from that string array, set string variables equal to each position
					-such that firstName = item[0]
					
				-create an instance of Address using the address variables from the string array in the constructor
				
				-next create an instance of Subject using the name, ID, and GPA variables, as well as the instance of Address
					-this is aggregation
				
				-push the subject onto the stack, and repeat
				
				-close file reader
	
	Print the Stack:
		-for or while loop to loop through popping off each stack member and printing them
			-pop the most recent entry off of the top of the stack
		
			-use that reference to obtain the subject's info; set obj to stack.pop
		
			-print the subject's information neatly using it's member variable getters
			
			-go to next subject
			
	Exiting:
		-exit variable for while loop to end for menu, then print a closing remark.
		
Notes:
	Address constructor will use (Address Line 1, Address Line 2, City, State, Zip)
	Subject constructor will use (First Name, Last Name, ID, GPA, Address addr)
	
				